# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YJ0nAnItVI7OZdtjkTxLeB9XaMMlStqY
"""

seq = 'TTGTTGCTTGGGGAGCTTGCTTGCTCTGATGGACTCGATAAGAAGGAATCACCGGCGGCAAGACGTGGTTTCGAGGGTACTATCCGTTTCCCACATGACTGACATCCTAAGGCCTGAAGCCTCCTCCATTATGGTGCGGACGATTAGGACCAGGATGCCAGAATTTGAGACACAGTATAAGGCTGGAAATACGTTAACCTCCTTGTTATAGCCGCTCCATTGCCCCTGTCTCCGAATCTCTTAGGAATCAGATGGATACCGTGTATGATCTTTGCGATAAGAGGGATCTATGACATAAGCCGTGCAGGTGTTCTGTGCTGTGACCGAAACCTTTGTTCCATCGGAGACACATAGAGTCGGCCGGAATCCGTCGTCGTTGTTGGTAAACTGCCAAACTGGTTCTCGTGTCATGTGCACTTCGAAGCTGGTCCATCGAGAGCGCCGGCCTGAGACCGAGCCAGGGAATGTTCAGCCGTCTGCCGGGTCGTGTTAGATGTGCGAATGTAGCACGGTCTGCCTTAACTGGGCAAATTAGGGCGACCCACTCCCGAGGGTCTTAGACAGGTTACGAGGGTTGGAAAATTCTGAATCAGGCAAAGTGCATGCATCATGCAAATTGTTCGAAACCTATTGCCAACTGCAATTTGTCAGAGTGGAGAACACCTCGGGATGTCTGCAGCAACCGTGTTCCCATCGCCAAGCAATCCATCAGCTTTGATATACCATTTCGATATTAATAGGCAATTATTTAAGTACCTGTACTAGAACTCTCACCGTACAGGGTCAGGACTGGAAATCGCATATGTAGAGGACTCCGTAGTGTGGCCAAGGTGACTAATTCAAGAAAAGGATACTCGGTGGTTTCTCTGACGGCCAGCCGCTTGAGCCGACGGCTCAACACCTGGCCCCTCAATAATT'
numa= seq.count('A')
numt=seq.count('T')
numg=seq.count('G')
numc=seq.count('C')
print("number of a = " + str(numa) + " number of t = " + str(numt) + " number of g = " + str(numg) + " number of c = " + str(numc))

#transcribing dna into rna
seq = 'TCTTAAGGTGTTTTTGTGCTTCAGGCATAGGACATGTCCAGATGGATACCGAAAATCTAACGTCACTCCGGCCTTATGATAAGTTTCAAACGGTTGATTGCATATGGTCTGCTAGAGCTTGGGAGGGCTAGCACAGCGAACAGTGGGGTTGCAGACTAGAGCGGCCATACATTCCCCTGATGCAGATTGTCAGGGCGCAGGATCACAACAACGACTGGTTGGTAGGTTAAAGACGTTCTATAGTTTAGTTCGCCAAGCGGACGCGTGGCTCGGGCTTCTACTTTGTGCAGGATATAACAAAATCTGTCGCAAGTTAGATAAGCCACGGACTAAATGATTGGGAAGGGAGGTAAATGAACTAATTCGCGGTCTTTCCAACACGGTGTTGACCGTAACTGCGTTGACGAAGTCAGACTCCCCGAGCATCGTAATGCTGCGTTATCTGCAGATGTTAGTTTTGTGTTAGGGAAACTATGACATATAGAGACCTCCGACCTGAAACGATTGTATCAGCTCGGGCGGCAAATTGTACCGGAGGAATGTTCGGCTTGCCCGGAGTTTGCGATCTAGTACCTGAACGCGGAAAGCCGACCTAACAGCGGGGCAGCATTTAGCCAGGAAGGTCCGTTCATCCTGGCACTCTGGACCCCGAAGTTCGATCACTGTGTTCACATGATACCCTCCCCCTCCAAAGAGTTCCTGTACGTCGACATAGTAACAAGCACATTAACTTCAATCTATGCCATTCATTGAATGCACAAGCAGATCTGGTACAGGTGCGCCAGCTCCAAGAATGAACTGGCGAGGTACGGTGGTGGTTCTTACCGCCTAGCCTAAGGCGAGTTGTGACTATCCAAGCAAATGTTAGTAATGTGATCCAGGCGTCGCTCTAGTCGCTGACATTAAGGGGCTACCGGGTAGGAGCTCTATGATGATGCGCATTTC'
rnaseq = seq.replace('T', 'U')
rnaseq

#reverse a string 
seq = "AAAACCCGGT"
revseq = seq[::-1]
print("the reverse is " + revseq)
revcomp = revseq.replace('A', 't').replace('T', 'a').replace('G', 'c').replace('C', 'g')
revcomp = revcomp.upper()
print("the reverse compliment is " + revcomp)

#alternative for rev string
s = 'AAAACCCGGT'
print(s[::-1].translate(str.maketrans('ACGT', 'TGCA')))

